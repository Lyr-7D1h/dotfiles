#!/usr/bin/env bash

set -eEuo pipefail

op=$1

help() {
	cat <<EOT
./sync_secrets <push|pull|list> [secret_name] [file_name]

Examples:
	./sync_secrets push asdf ./.secrets
	
	./sync_secrets pull terraform ./terraform.tfvars
EOT
}

# bw list items --raw --folderid "d48dbd5b-b683-4de8-8edc-ae0b00c1e25d"
bitwarden() {
  BW_SESSION=${BW_SESSION:-`bw unlock --raw`}
  export BW_SESSION=$BW_SESSION
  bw sync
  local folder="secrets"

  if ! bw get folder $folder &>/dev/null ; then
    echo "Creating $folder folder"
    local data=`echo -n "{\"name\": \"$folder\"}" | base64`
    bw create folder $data
  fi

  local folder_id=`bw get folder $folder | jq -r ".id"`

  if [[ "$op" == "list" ]]; then
    bw list items --raw --folderid "$folder_id" | jq -r ".[].name" | sed "s/^SECRET_//"
    exit 0
  fi

  local secret_name="SECRET_$2"
  local file_name=$3

  if [[ "$secret_name" == "" ]] || [[ "$file_name" == "" ]]; then
	help
	exit 1
  fi

  if [[ "$op" == "pull" ]]; then
    echo "Pulling $secret_name from bitwarden"

    local note=`bw get notes $secret_name`
  
    echo -n "$note" > $file_name 
  fi

  if [[ "$op" == "push" ]]; then
    echo "Pushing '$file_name' as '$secret_name' to bitwarden"
    
    if [[ ! -f $file_name ]]; then
      echo "file "$file_name" does not exist"
      exit 1
    fi
    
    local file_data=`jq -n --arg c "$(cat $file_name)" '$c'`

    local item=`bw get item $secret_name 2>/dev/null`
    local item_folder_id=`echo $item | jq -r ".folderId"`
    local id=`echo $item | jq -r ".id"`
    
    if [[ "$id" == "" ]]; then
      echo "Secret '$secret_name' not found"
      echo "Creating '$secret_name' in folder '$folder'"

      bw get template item | jq ".type=2" | jq ".collectionIds=[]" | jq ".name=\"$secret_name\"" | jq '.folderId="$folder_id"' | jq '.notes="$file_data"' | jq ".secureNote.type=0" | bw encode | bw create item > /dev/null
      exit 0
    fi
    
    if [[ "$item_folder_id" != "" ]]; then
      if [[ "$item_folder_id" != "$folder_id" ]]; then
        echo "Could not update secret found within a different folder"
        exit 1
      fi
    fi

    echo "Updating secret '$secret_name' ($id)"
    echo -n "$item" | jq ".notes=$file_data" | bw encode | bw edit item $id > /dev/null
  fi
}

if [[ "$op" != "push" ]] && [[ "$op" != "pull" ]] && [[ "$op" != "list" ]]; then
	help
	exit 1
fi


if command -v bw &> /dev/null ; then
  echo "Bitwarden found"
  bitwarden ${@:1}
  echo "Secrets succesfully updated :)"
  exit
fi

echo "No Password Manager found"
exit 1                              
