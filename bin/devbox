#!/usr/bin/env bash

#Ref: https://vsupalov.com/docker-shared-permissions/
# https://stackoverflow.com/questions/27701930/how-to-add-users-to-docker-container
# https://askubuntu.com/questions/420784/what-do-the-disabled-login-and-gecos-options-of-adduser-command-stand

if [ $# == 0 ]; then
    echo "usage: devbox {session-name}"
else
    nix-shell -p xorg.xhost --run 'xhost +local:docker' > /dev/null # for GUI apps

    session_name=$1
    home=/home/$(id -un)
    sh="export PATH=\$PATH:$home/.nix-profile/bin/:/run/current-system/sw/bin/; zsh"
    docker run \
        --mount type=bind,source=/nix/,target=/nix/,readonly \
        --mount type=bind,source=/run/current-system/sw/,target=/run/current-system/sw/,readonly \
        --mount type=bind,source=$home/.nix-profile/,target=$home/.nix-profile/,readonly \
        --mount type=bind,source=$home/.histdb,target=$home/.histdb \
        --mount type=bind,source=$home/.zsh_history,target=$home/.zsh_history \
        --mount type=bind,source=$home/ws/,target=$home/ws \
        --mount type=bind,source=$home/.config/,target=$home/.config,readonly \
        --mount type=bind,source=$home/.profile,target=$home/.profile,readonly \
        --mount type=bind,source=$home/.zshrc,target=$home/.zshrc,readonly \
        --mount type=bind,source=$home/.antigen/,target=$home/.antigen/,readonly \
        --mount type=bind,source=$home/.vimrc,target=$home/.vimrc,readonly \
        --mount type=bind,source=$home/.gitconfig,target=$home/.gitconfig,readonly \
        --mount type=bind,source=$home/.ssh/,target=$home/.ssh/,readonly \
        --env "DISPLAY" \
        --env "NIX_PATH" \
        --mount type=bind,source=$home/.Xauthority,target=$home/.Xauthority,readonly \
        --mount type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix,readonly \
        --user $(id -u):$(id -g) \
        -v /etc/passwd:/etc/passwd \
        --name $session_name --hostname devbox --net host --privileged \
        -it devbox -c "$sh" > /dev/null 2>&1 \
        || ( docker start $session_name > /dev/null && docker exec -it $session_name sh -c "$sh" )
fi
