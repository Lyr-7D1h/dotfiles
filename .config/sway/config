#
# Requirements:
#   libalsa
#   slurp
#   grim
#   alacritty
#   bemenu
#   daily_paper (custom script)
#   power_menu (custom script using bemenu)
#   wl-copy
#

### Variables
# Theme
set $cl_high #7289da
set $cl_indi #99aab5 
set $cl_back #23272a 
set $cl_fore #ffffff
set $cl_urge #ee2e24

# Logo key
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $screenshot grim ~/Pictures/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $screenclip export SCREENSHOT_FILENAME=$HOME/Pictures/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png && slurp | grim -g - $SCREENSHOT_FILENAME && cat $SCREENSHOT_FILENAME | wl-copy
set $term alacritty
set $soundraise pactl set-sink-volume @DEFAULT_SINK@ +5%
set $soundlower pactl set-sink-volume @DEFAULT_SINK@ -5%
set $soundmute pactl set-sink-mute @DEFAULT_SINK@ toggle
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu bemenu-run --no-exec -i \
    -H 27 \
    --tb "$cl_back" \
    --tf "$cl_fore" \
    --fb "$cl_back" \
    --nb "$cl_back" \
    --hb "$cl_high" \
    --hf "$cl_fore" | xargs swaymsg exec --

set $background ~/.wallpaper
set $suspend systemctl suspend
set $power power_menu
set $disnotification makoctl dismiss --all
set $newworkspace ~/bin/swaynewworkspace


# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

# Focus to urgent window (only works for xwayland)
for_window [urgent="latest"] focus

# Rules for floating windows
for_window [app_id="org.gnome.Nautilus"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [title="Firefox — Sharing Indicator"] kill
for_window [title="Firefox — Sharing Indicator"] floating enable
for_window [title="Firefox — Sharing Indicator"] nofocus
for_window [app_id="seahorse"] floating enable
for_window [class="Steam"] floating enable
for_window [class="Steam" title="^Steam$"] floating disable
for_window [app_id="nm-connection-editor"] floating enable
for_window [class="Bitwarden"] floating enable
for_window [app_id="pulseUI"] floating enable

# gaps inner 5

font UbuntuMono:Sans 10 

### Autostart apps
# exec wl-paste -t text --watch clipman store 1>> /tmp/clipman.log 2>&1 &
# exec lxsession
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec qbittorrent
# exec protonmail-bridge --no-window
exec mako 
# exec wlsunset -l 52.379189 -L 4.899431 -t 5000 -T 5700 -g 0.9 &> /tmp/wlsunset.log
exec sworkstyle --log-level debug &> /tmp/sworkstyle.log
exec nm-applet --indicator
# exec blueman-applet
exec daily_paper
exec swayidle -w \
    timeout 300 'swaylock -f' \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f'
exec bitwarden-desktop &

### Output configuration (swaymsg -t get_outputs)
output * bg ~/.wallpaper fill 
output DP-1 resolution 1920x-1080 position 0,0
output HDMI-A-1 resolution 1920x1080 position 1920,0
# output DP-3 resolution 1024x768 position 3840,148

### Key bindings
    # Open Terminal
    bindsym $mod+Return exec $term

	# Open Terminal where last leftoff
    bindsym $mod+Shift+Return exec alacritty -e zsh -c "cd $(latest_cd) && exec zsh"

    bindsym $mod+q kill

    bindsym $mod+f exec $menu

    bindsym $mod+Print exec $screenshot
    bindsym $mod+Shift+Print exec $screenclip

    # Allow resizing with $mod + mouse
    floating_modifier $mod normal

    bindsym $mod+Shift+c reload

    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Media keys
    bindsym XF86AudioRaiseVolume exec $soundraise
    bindsym XF86AudioLowerVolume exec $soundlower
    bindsym XF86AudioMute exec $soundmute

    bindsym $mod+Shift+minus exec $suspend

    bindsym $mod+Shift+Escape exec $power

    bindsym $mod+Slash exec $disnotification


    # Moving around:

    # Move to previous workspace
    bindsym $mod+Tab workspace back_and_forth

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right


    # Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

    bindsym $mod+p workspace next_on_output
    bindsym $mod+o workspace prev_on_output

    bindsym $mod+n exec $newworkspace
	bindsym $mod+Shift+n exec $newworkspace move


    # Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent


    # Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+z move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+Shift+z scratchpad show

    bindsym $mod+r mode "resize"

# Resizing containers:
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bar { 
     swaybar_command waybar
}

# Status Bar:
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %H:%M:%S'; do sleep 1; done

#     colors {
#         statusline $cl_fore
#         background $cl_back
# 	focused_workspace #323232 $cl_high $cl_fore
#         inactive_workspace #323232 #33373a #5c5c5c
#     }
# }

include /etc/sway/config.d/*
