#!/usr/bin/env bash

set -eo pipefail


if [[ -z "$1" ]]; then
  echo "tmuxer {config}

    tmuxer config.toml"
  exit 1
fi

CONFIG_PATH=`realpath $1`

info() {
  printf "\033[0;34m$@\033[0m\n"
}

# get local network ip from default network interface 
LOCAL_IP() {
    local interfaces=$(ip link show up | grep -P "(?<=^[0-9]: )((enp)|(wlo)|(eth)|(wlp))[^:]*" -o)
    local routes=$(ip route show | grep -E '^default')
    local default=${interfaces[0]}
    for interface in $interfaces; do
        gateway=$(ip route show | grep -P "(?<=^default via )([0-9]|[.])*(?= dev $interface)" -o)
        if [[ "$gateway" != "" ]]; then
            default=$interface
            break
        fi
    done

    echo `ip a show dev $default | grep 'inet' | awk '{print $2}' | head -n 1 | cut -d '/' -f1`
}

OS() {
  uname
}

WAIT_ON_PORT() {
  local port=$1
  while ! nc -z localhost 88; do sleep 0.1; done
}

HOSTNAME() {
  if [[ "$(os)" == "Linux" ]]; then
      hostname=$(hostname -I)
      printf "It's probably but make sure\n"
  elif [[ "$(os)" == "Darwin" ]]; then
      hostname=$(ipconfig getifaddr en0)
      printf "It's probably $hostname but make sure\n"
  else
      printf "Unable to determine the OS\n"
  fi
}

get_value() {
  local key=$1
  local property=$2
  local req=$3
  local value=`tomlq -r ".[\"$key\"].$property" $CONFIG_PATH`
  if [[ "$req" == "--required" ]] && [[ "$value" == null ]]; then
    >&2 echo "toml value '$key.$property' is null"
    exit 1
  fi
  echo $value
}

if ! which yq >/dev/null; then
  info "Please install https://github.com/kislyuk/yq"
  exit 1
fi

keys=(`tomlq -r 'keys[]' $1`);
PARENT=$(dirname $CONFIG_PATH)
cd $PARENT
for key in "${keys[@]}"; do
  path=$(get_value $key path --required)
  repo=$(get_value $key repo --required)

  if [ ! -d $path ]; then
    info "cloning $repo"
    git clone --recursive $repo $path
  fi

  path=$(realpath -s $path)

  update=$(get_value $key update)
  if [[ $update == "true" ]]; then
    info "Pulling updates in $path"
    git -C $path pull
  fi

  echo $path

  execnow=$(get_value $key execnow)
  if [[ $execnow != null ]]; then
    (cd $path && eval $execnow)
  fi

  exec=$(get_value $key exec)
  if [[ $exec != null ]]; then
    info "Running $exec in $path"
    tmux new-session -c $path -d -s $key
    tmux send-keys -t $key "$exec" C-m
  fi
done
